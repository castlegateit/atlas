@keyframes #{$atlas-prefix}header-animation-in {
    from {
        transform: translateY(-100%);
    }

    to {
        transform: none;
    }
}

.#{$atlas-prefix}header {
    @extend .container-fluid;
    @extend .py-3;

    align-items: center;
    display: flex;
    position: relative;

    @include media-breakpoint-down(sm) {
        flex-wrap: wrap;
    }

    // Position can be fixed by JavaScript on large screens, so we need to set a
    // predictable, fixed height on this block.
    &--fixed {
        @include media-breakpoint-up(lg) {
            height: $atlas-header-fixed-height-full;
        }
    }

    // Fixed position, triggered by JavaScript on resize or scroll. This should
    // only apply to large screens.
    &--is-fixed {
        @include media-breakpoint-up(lg) {
            animation: $atlas-header-fixed-animation;
            background: $atlas-header-fixed-background;
            box-shadow: $atlas-header-fixed-box-shadow;
            height: $atlas-header-fixed-height;
            left: 0;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 200;
        }
    }

    // Fixed position offset to allow space for the WordPress admin bar. This
    // should only be applied alongside the `--is-fixed` modifier.
    &--is-offset {
        @include media-breakpoint-up(lg) {
            top: 32px;
        }
    }

    &__title {
        display: flex;
        margin: 0;
        order: 10;
        padding: 0;

        @include media-breakpoint-down(xs) {
            justify-content: center;
            text-align: center;
            width: 100%;
        }

        @include media-breakpoint-only(sm) {
            flex-grow: 10;
        }
    }

    &__title-link {
        display: block;
    }

    // Optional element: can use text as site title instead.
    &__title-image {
        display: block;
        max-height: 80px;

        // Set maximum height of image inside fixed position header and prevent
        // override with specificity hack.
        &--is-fixed {
            @include media-breakpoint-up(lg) {
                @include atlas-specificity-hack(2) {
                    max-height: calc(#{$atlas-header-fixed-height} - #{2 * $spacer});
                }
            }
        }
    }

    // Optional element: displays non-collapsed header content or links. Atlas
    // does not provide any default styles for the contents of this element.
    &__special {
        order: 20;

        @include media-breakpoint-down(xs) {
            margin-top: $spacer;
        }

        @include media-breakpoint-up(md) {
            margin-left: $spacer;
            order: 40;
        }
    }

    // Navigation menu toggle button container element, usually inserted with
    // JavaScript, with "left" and "right" modifiers to control alignment on
    // small screens.
    &__nav-toggle {
        order: 30;

        @include media-breakpoint-down(xs) {
            align-items: center;
            display: flex;
            flex-grow: 10;
            justify-content: center;
            margin-top: $spacer;
        }

        @include media-breakpoint-up(sm) {
            margin-left: $spacer;
        }

        // The navigation is always visible on wide screens, so the toggle
        // button should be hidden on these screen sizes.
        @include media-breakpoint-up(md) {
            display: none;
        }

        // Align the button on the left. Might be preferable where there are no
        // non-collapsed special elements.
        &--left {
            @include media-breakpoint-down(xs) {
                justify-content: flex-start;
                margin-right: $spacer;
            }
        }

        // Align the button on the right, which is usually preferable where
        // there are non-collapsed special elements.
        &--right {
            @include media-breakpoint-down(xs) {
                justify-content: flex-end;
                margin-left: $spacer;
            }
        }
    }

    // Navigation toggle button, as inserted with JavaScript. This might not be
    // present if it has already been defined in the HTML. It will only have its
    // "default" modifier class if it was not created from a corresponding HTML
    // template element.
    &__nav-toggle-button {
        &--default {
            @extend .btn;
            @extend .btn-primary;
        }
    }

    &__nav {
        order: 40;

        @include media-breakpoint-down(xs) {
            width: 100%;
        }

        @include media-breakpoint-down(sm) {
            margin-top: $spacer;
        }

        @include media-breakpoint-up(md) {
            align-items: center;
            display: flex;
            flex-grow: 10;
            justify-content: flex-end;
            order: 30;
        }

        @include media-breakpoint-only(sm) {
            width: 100%;
        }

        // Toggle state, set with JavaScript
        &--toggle {
            @include media-breakpoint-down(xs) {
                width: calc(100% - #{2 * $spacer});
            }

            @include media-breakpoint-down(sm) {
                background: $atlas-nav-background;
                box-shadow: $atlas-nav-box-shadow;
                margin: 0;
                position: absolute;
                right: $spacer;
                top: 100%;
                z-index: 10;
            }

            @include media-breakpoint-only(sm) {
                width: 320px;
            }
        }

        // Hidden state, set with JavaScript.
        &--hidden {
            @include media-breakpoint-down(sm) {
                display: none;
            }
        }
    }

    &__nav-list {
        margin: 0;
        padding: 0;

        &--level-1 {
            @include media-breakpoint-down(sm) {
                border-bottom: $atlas-nav-border-width solid $atlas-nav-border-color;
            }

            @include media-breakpoint-up(md) {
                align-items: center;
                display: flex;
                flex-wrap: wrap;
                justify-content: flex-end;
            }
        }

        // Second level navigation lists are not supported without JavaScript.
        &--level-2 {
            display: none;

            @include media-breakpoint-up(md) {
                background: $atlas-nav-background;
                border-bottom: $atlas-nav-border-width solid $atlas-nav-border-color;
                box-shadow: $atlas-nav-box-shadow;
                position: absolute;
                z-index: 20;
            }
        }

        // Third level navigation lists are not supported.
        &--level-3 {
            display: none;
        }

        // Second level lists are supported with JavaScript ...
        &--item-toggle {
            @include atlas-specificity-hack(2) {
                display: block;
            }
        }

        // ... but they are hidden by a class added by JavaScript.
        &--item-hidden {
            @include atlas-specificity-hack(3) {
                display: none;
            }
        }
    }

    &__nav-item {
        display: block;

        @include media-breakpoint-down(sm) {
            border-top: $atlas-nav-border-width solid $atlas-nav-border-color;
        }

        &--level-1 {
            @include media-breakpoint-up(md) {
                margin-left: $spacer;
            }
        }

        &--level-2 {
            @include media-breakpoint-up(md) {
                border-top: $atlas-nav-border-width solid $atlas-nav-border-color;
            }
        }
    }

    &__nav-link {
        display: block;
        flex: 10;

        &--level-1 {
            @include media-breakpoint-down(sm) {
                padding: $atlas-nav-link-padding-y $atlas-nav-link-padding-x;
            }

            // Adjust vertical space to match active state bottom border width
            // on larger screens to maintain the link alignment.
            @include media-breakpoint-up(md) {
                padding-top: $atlas-nav-active-border-width;
                padding-bottom: $atlas-nav-active-border-width;
            }
        }

        &--level-2 {
            padding: $atlas-nav-link-padding-y $atlas-nav-link-padding-x;
            // padding: $spacer;

            @include media-breakpoint-down(sm) {
                padding-left: 2 * $atlas-nav-link-padding-x;
            }
        }

        // Top level active state: line on the left on small screens; line at
        // the bottom (with padding adjusted accordingly) on large screens.
        &--level-1-active {
            @include media-breakpoint-down(sm) {
                border-left: $atlas-nav-active-border-width solid $atlas-nav-active-border-color;
                padding-left: calc(#{$atlas-nav-link-padding-x} - #{$atlas-nav-active-border-width});
            }

            @include media-breakpoint-up(md) {
                border-bottom: $atlas-nav-active-border-width solid $atlas-nav-active-border-color;
                padding-bottom: 0;
            }
        }

        // Second level active state: line on the left on all screen sizes.
        &--level-2-active {
            border-left: $atlas-nav-active-border-width solid $atlas-nav-active-border-color;
            padding-left: calc(#{$atlas-nav-link-padding-x} - #{$atlas-nav-active-border-width});

            @include media-breakpoint-down(sm) {
                padding-left: calc(#{2 * $atlas-nav-link-padding-x} - #{$atlas-nav-active-border-width});
            }
        }
    }

    // Second level toggle button wrap, which surrounds the level 1 link element
    // and the link or button that toggles the second level list visibility.
    // This element is usually inserted with JavaScript.
    &__nav-item-toggle {
        align-items: center;
        display: flex;
    }

    // Second level toggle button, which should appear after the level 1 link
    // element and at the end of the wrap element. This element is usually
    // inserted with JavaScript.
    &__nav-item-toggle-button {
        @include media-breakpoint-up(md) {
            margin-left: map-get($spacers, 2);
        }

        // Default styles applied to the toggle button when it has been created
        // and inserted with JavaScript and when it has not been created from an
        // HTML template element.
        &--default {
            @extend .btn;
            @extend .btn-secondary;
            @extend .btn-sm;

            @include media-breakpoint-down(sm) {
                margin-left: map-get($spacers, 2);
                margin-right: map-get($spacers, 2);
            }
        }
    }

    // Optional element: displays collapsed header content or links. Atlas does
    // not provide any default styles for the contents of this element.
    &__nav-special {
        @include media-breakpoint-down(sm) {
            margin-top: $spacer;
        }

        @include media-breakpoint-up(md) {
            margin-left: $spacer;
        }

        // If the navigation menu can be toggled with JavaScript, this element
        // will appear in an absolute position box, so we should add some
        // padding around this element.
        &--toggle {
            @include media-breakpoint-down(sm) {
                margin: 0;
                padding: $spacer;
            }
        }
    }
}
